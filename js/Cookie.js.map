{"version":3,"sources":["Cookie.js"],"names":[],"mappingsfile":"Cookie.js","sourcesContent":["/************************************************ \r\nCookie Manager\r\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.3.0\r\nUpdate: 2015-09-10\r\n\r\nDescription:\r\n   set / get / delete cookie.\r\n   Return null if cookie not supported.\r\n   \r\nCompatibility:\r\n    Chrome; Fire Fox; Safari; Edge; IE 9-11; IE 7,8;\r\n\r\nAPI:\r\n   $$.cookie.set(name)\r\n    - (string) Set cookie: cookie[name] = name\r\n\r\n   $$.cookie.set(name, value)\r\n    - (string) Set cookie: cookie[name] = value\r\n\r\n   $$.cookie.set(opts)\r\n    - (string) Set cookie:\r\n      opts: {\r\n        name: name of cookie\r\n        value: value (optional)\r\n        expire: expire time in hour (optional)\r\n        domain: domain of the cookie (optional)\r\n        path: (optional)\r\n        secure: (optional)\r\n      }\r\n    \r\n   $$.cookie.get(name)\r\n    - (string) Fetch certain cookie value by its name.\r\n      return null if not found\r\n\r\n   $$.cookie.del(opts)\r\n    - Delete a cookie of the given name / domain / path\r\n    \r\n   $$.cookie.del(name)\r\n    - Delete a cookie of the given name\r\n\r\n\r\n************************************************/\r\n(function () {\r\n    \"use strict\";\r\n    var _initCookie = function () {\r\n        // set cookie --------------------------------------------------------------------------\r\n        this.set = function (opts) {\r\n            var name = null;\r\n            var value = null;\r\n            var expires = null;\r\n            var domain = null;\r\n            var path = null;\r\n            var secure = null;\r\n\r\n            if (typeof opts == \"object\") {\r\n                name = opts.name;\r\n                value = opts.value;\r\n                expires = opts.expires;\r\n                domain = opts.domain;\r\n                path = opts.path;\r\n                secure = opts.secure;\r\n            } else {\r\n                if (arguments.length == 2) {\r\n                    // only set name & value\r\n                    name = arguments[0];\r\n                    value = arguments[1];\r\n                } else {\r\n                    // only set name\r\n                    name = opts;\r\n                }\r\n            } \r\n\r\n            if (name === null || name === undefined || name === \"\") return null;\r\n            if (value === null || value === undefined) value = \"\";\r\n            if (secure == false) secure = null;\r\n            return _set(name, value, expires, domain, path, secure);\r\n        };\r\n\r\n        // get cookie value --------------------------------------------------------------------------\r\n        this.get = function (name) {\r\n            try {\r\n                var arr = document.cookie.match(new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\"));\r\n                if (arr != null) return unescape(arr[2]);\r\n                return null;\r\n            } catch (e) {\r\n                return null;\r\n            }\r\n        };\r\n\r\n        // delete cookie --------------------------------------------------------------------------\r\n        this.del = function (opts) {\r\n            var name = null;\r\n            var domain = null;\r\n            var path = null;\r\n\r\n            if (typeof opts == \"object\") {\r\n                name = opts.name;\r\n                domain = opts.domain;\r\n                path = opts.path;\r\n            } else {\r\n                name = opts;\r\n            }\r\n\r\n            if (name === null || name === undefined || name === \"\") return;\r\n            return _set(name, \"\", 0, domain, path, null);\r\n        };\r\n\r\n        // ---------------------------------------------------------------------------------------\r\n        // set cookie value into document cookie\r\n        var _set = function (name, value, expires, domain, path, secure) {\r\n            try {\r\n                var exp = null;\r\n                if (expires != null) {\r\n                    exp = new Date();\r\n                    exp.setTime(exp.getTime() + expires * 60 * 60 * 1000);\r\n                }\r\n\r\n                var cookieStr = name + \"=\" + escape(value);\r\n                if (exp != null) cookieStr += \"; expires=\" + exp.toGMTString();\r\n                if (path != null) cookieStr += \"; path=\" + path;\r\n                if (domain != null) cookieStr += \"; domain=\" + domain;\r\n                if (secure != null) cookieStr += \"; secure\";\r\n\r\n                document.cookie = cookieStr;\r\n                return name;\r\n            } catch (e) {\r\n                return null;\r\n            }\r\n        };\r\n    }\r\n    window.$$ = window.$$ || {};\r\n    window.$$.cookie = new _initCookie();\r\n})();"],"sourceRoot":"/source/"}